spring:
  application:
    name: social-rating-calculator
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: ${spring.application.name}
        instance-id: "${spring.application.name}-${spring.cloud.client.hostname}-${random.int[1,999999]}"
        register: true
        deregister: true
        health-check-interval: 10s
        health-check-timeout: 10s
        health-check-critical-timeout: 10s
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: br.com.palerique
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  redis:
    database: 0
    host: localhost
    port: 6379
    password: Redis2019!
    timeout: 60000
logging:
  level:
    br:
      com:
        palerique: DEBUG
management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    enable:
      all: true
    tags:
      application: "${spring.application.name}"
      instance: "${spring.cloud.consul.discovery.instance-id}"
    export:
      prometheus:
        enabled: true
        pushgateway:
          enabled: true
          base-url: localhost:9091
          shutdown-operation: push
          push-rate: 5s
