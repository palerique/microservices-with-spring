plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.spotbugs' version '4.7.0'
    id 'checkstyle'
    id "org.owasp.dependencycheck" version "6.3.1"
    id 'pmd'
    id 'jacoco'
}

group = 'br.com.palerique'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients:2.6.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'net.jcip:jcip-annotations:1.0'
    implementation 'com.github.spotbugs:spotbugs-annotations:3.1.3'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'io.prometheus:simpleclient_pushgateway'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

spotbugs {
    effort = 'MAX'
    reportLevel = 'LOW'
    ignoreFailures = false
    showProgress = true
    showStackTraces = true
}

checkstyle {
    toolVersion = '8.42'
    ignoreFailures = false
    maxErrors = 0
    maxWarnings = 0
    configDirectory = file("${project.rootDir}/../config/checkstyle")
}

check.dependsOn dependencyCheckAnalyze
check.dependsOn jacocoTestCoverageVerification
check.dependsOn jacocoTestReport

dependencyCheck {
    failBuildOnCVSS = 0
    suppressionFile = "${project.rootDir}/../config/owasp/suppressions.xml"
}

pmd {
    consoleOutput = true
    toolVersion = "6.34.0"
    ruleSets = ["${project.rootDir}/../config/pmd/ruleset.xml"]
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}
